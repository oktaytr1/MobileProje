// <auto-generated />
using System;
using BarberShopSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberShopSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241209214632_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarberShopSystem.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Posta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Profesyonel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Posta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("İsim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profesyoneller");
                });

            modelBuilder.Entity("BarberShopSystem.Models.ProfesyonelServis", b =>
                {
                    b.Property<int>("ProfesyonelId")
                        .HasColumnType("int");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.HasKey("ProfesyonelId", "ServisId");

                    b.HasIndex("ServisId");

                    b.ToTable("ProfesyonelServisler");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProfesyonelId")
                        .HasColumnType("int");

                    b.Property<bool>("RezervasyonDurumu")
                        .HasColumnType("bit");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TarihGuncelleme")
                        .HasColumnType("datetime2");

                    b.Property<string>("Yenilik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProfesyonelId");

                    b.HasIndex("ServisId");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Servis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sure")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servisler");
                });

            modelBuilder.Entity("BarberShopSystem.Models.ProfesyonelServis", b =>
                {
                    b.HasOne("BarberShopSystem.Models.Profesyonel", "Profesyonel")
                        .WithMany("ProfesyonelServisler")
                        .HasForeignKey("ProfesyonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShopSystem.Models.Servis", "Servis")
                        .WithMany("ProfesyonelServisler")
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profesyonel");

                    b.Navigation("Servis");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Rezervasyon", b =>
                {
                    b.HasOne("BarberShopSystem.Models.Customer", "Customer")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShopSystem.Models.Profesyonel", "Profesyonel")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("ProfesyonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarberShopSystem.Models.Servis", "Servis")
                        .WithMany()
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Profesyonel");

                    b.Navigation("Servis");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Customer", b =>
                {
                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Profesyonel", b =>
                {
                    b.Navigation("ProfesyonelServisler");

                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("BarberShopSystem.Models.Servis", b =>
                {
                    b.Navigation("ProfesyonelServisler");
                });
#pragma warning restore 612, 618
        }
    }
}
